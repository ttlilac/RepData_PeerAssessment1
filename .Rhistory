library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(xlsx)
install.packages("rJava")
library(xlsx)
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("rJava")
install.packages("rJava")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
clear
setwd("C:/Users/ecq523/dinglei/Google Drive/Personal Folder/Coursera/Reproducible Research/Course Project 1/Git")
act<-read.csv("activity.csv")
View(act)
?sum
totalsteps<- aggregate(act$steps, by=list(date=act$date), Fun=sum)
totalsteps<- aggregate(act$steps, by=list(date=act$date), FUN=sum)
View(totalsteps)
?hist
hist(totalsteps)
hist(totalsteps$x)
?median
meansteps<- aggregate(act$steps, by=list(date=act$date), FUN=mean)
mediansteps<- aggregate(act$steps, by=list(date=act$date), FUN=median)
require(ggplot2)
View(meansteps)
ggplot(meansteps, aes(date, x)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Average Steps")
ggplot(meansteps, aes(date, x)) + geom_line() +
xlab("") + ylab("Average Steps")
View(meansteps)
ggplot(meansteps, aes(date, x)) + geom_line()
?ggplot
ggplot(meansteps, aes(x=date, y=x)) + geom_line()
?plot
plot(meansteps$date, meansteps$x, type="l")
?lines
meaninterval<- aggregate(act$steps, by=list(date=act$interval), FUN=mean)
View(meaninterval)
View(meaninterval)
View(meaninterval)
View(meansteps)
?mean
meaninterval<- aggregate(act$steps, by=list(date=act$interval), FUN=mean(..., na.rm=TRUE))
meaninterval<- aggregate(act$steps, by=list(date=act$interval), FUN=mean(na.rm=TRUE))
?aggregate
meaninterval<- aggregate(act$steps, by=list(date=act$interval), FUN=mean(), na.action=na.omit)
meaninterval<- aggregate(act$steps, by=list(date=act$interval), FUN=mean, na.action=na.omit)
View(meaninterval)
meaninterval<- aggregate(act$steps, by=list(interval=act$interval), FUN=mean)
View(meaninterval)
meaninterval<- aggregate(act$steps, by=list(date=act$interval), FUN=mean, na.action=na.omit)
View(meaninterval)
View(meaninterval)
mean(act[,act$interval=0])
mean(act[,act$interval==0])
colMeans(act[act$interval==0, steps])
colMeans(act[act$interval==0, act$steps])
colMeans(act[act$interval==0,]$steps)
mean(act[act$interval==0,]$steps)
act[act$interval==0,]$steps
mean(act[act$interval==0,]$steps, na.rm = TRUE)
meaninterval<- aggregate(act$steps, by=list(date=act$interval),                                           FUN=mean(x=act$steps, na.rm=TRUE))
meaninterval<- aggregate(act$steps, by=list(date=act$interval),                                           FUN=mean(..., na.rm=TRUE))
meaninterval<- aggregate(act$steps, by=list(date=act$interval),                                           FUN=mean(na.rm=TRUE,...))
meaninterval<- aggregate(act$steps, by=list(date=act$interval),                                           FUN=mean(na.rm=TRUE))
meaninterval<- aggregate(act$steps, by=list(date=act$interval),                                           FUN=mean(act$steps,na.rm=TRUE))
meaninterval<- aggregate(act[!is.na(act$steps),]$steps,                         by=list(date=act$interval), FUN=mean)
act2<-act[!is.na(act$steps),]
meaninterval<- aggregate(act2$steps, by=list(date=act2$interval), FUN=mean)
plot(meaninterval$date, meansteps$x, type="l")
View(meaninterval)
meaninterval<- aggregate(act2$steps, by=list(interval=act2$interval), FUN=mean)
plot(meaninterval$interval, meansteps$x, type="l")
View(meaninterval)
length(meaninterval$interval)
length(meaninterval$x)
plot(meaninterval$interval, meaninterval$x, type="l")
for(i in 1:length(act$steps){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[ceiling(i/288)]
}
}
for(i in 1:length(act$steps){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[ceiling(i/288)]
}
}
i=1
for(i in 1:length(act$steps){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[ceiling(i/288)]
}
}
i=1
for(i in 1:length(act$steps){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[ceiling(i/288)]
}
}
View(meaninterval)
i=1
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[ceiling(i/288)]
}
}
View(act)
i=1
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
}
}
View(act)
i=1
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
print(i%%288)
}
}
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
test[i] = i%%288
}
}
test
test<-list()
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
test[i] = i%%288
}
}
View(act)
test<-list(17568)
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
test[i] = i%%288
}
}
test<-numeric()
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
test[i] = i%%288
}
}
act<-read.csv("activity.csv")
test<-numeric()
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
test[i] = i%%288
}
}
View(mediansteps)
View(act)
View(act)
View(meaninterval)
?weekdays
as.Date(act$date)
act$date<-as.date(act$date)
act$date<-as.Date(act$date)
wday<-weekdays(act$date)
wday
fv<-c("weekday","weekend")
fv=factor(fv)
fv
fv[1]
fv[2]
act$date<-as.Date(act$date)
fv<-c("weekday","weekend")
fv=factor(fv)
for(i in 1:length(act$steps)){
if(weekdays(act$date[i])=="Saturday" | weekdays(act$date[i])=="Sunday"){
act$factor[i] = fv[2]
}else{
act$factor[i] = fv[1]
}
}
View(act)
wk<-act[factor==1,]
we<-act[factor==2,]
wk<-act[act$factor==1,]
we<-act[act$factor==2,]
?ggplot
meaninterval2<- aggregate(act$steps, by=list(interval=act2$interval), FUN=mean)
meaninterval2<- aggregate(act$steps, by=list(interval=act$interval), FUN=mean)
View(meaninterval2)
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
}
}
require(ggplot2)
act<-read.csv("activity.csv")
totalsteps<- aggregate(act$steps, by=list(date=act$date), FUN=sum)
hist(totalsteps$x)
meansteps<- aggregate(act$steps, by=list(date=act$date), FUN=mean)
mediansteps<- aggregate(act$steps, by=list(date=act$date), FUN=median)
act2<-act[!is.na(act$steps),]
meaninterval<- aggregate(act2$steps, by=list(interval=act2$interval), FUN=mean)
plot(meaninterval$interval, meaninterval$x, type="l")
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
act$steps[i] = meaninterval$x[i%%288]
}
}
View(meaninterval)
View(act)
1%%288
288%%288
for(i in 1:length(act$steps)){
if(is.na(act$steps[i])){
res= i%%288
if(res == 0) res= 1
act$steps[i] = meaninterval$x[res]
}
}
act$date<-as.Date(act$date)
fv<-c("weekday","weekend")
fv=factor(fv)
for(i in 1:length(act$steps)){
if(weekdays(act$date[i])=="Saturday" | weekdays(act$date[i])=="Sunday"){
act$factor[i] = fv[2]
}else{
act$factor[i] = fv[1]
}
}
meaninterval2<- aggregate(act$steps, by=list(interval=act$interval), FUN=mean)
View(meaninterval2)
?aggregate
meaninterval2<- aggregate(act$steps, by=list(interval=act$interval, factor=act$factor), FUN=mean)
View(meaninterval2)
p<-ggplot(meaninterval2, aes(interval, factor, x)) + geom_line(interval, x) + facet_grid(factor ~ .)
?geom_line
p<-ggplot(meaninterval2, aes(interval, factor, x)) + geom_line() + facet_grid(factor ~ .)
ggplot(meaninterval2, aes(interval, factor, x)) + geom_line() + facet_grid(factor ~ .)
ggplot(meaninterval2, aes(interval, x)) + geom_line() + facet_grid(factor ~ .)
packages.install("knitr")
install.packages("knitr")
?knit2html
knit2html
library(knitr)
?"knit2html"
knit2html(PA1_template.Rmd)
getwd()
knit2html("PA1_template.Rmd")
